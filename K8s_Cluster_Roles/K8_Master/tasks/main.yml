---
# tasks file for K8_Master
  - name: "Configuring yum repository"
    yum_repository:
        name: kubernetes
        description: kubernetes.repo
        baseurl: https://packages.cloud.google.com/yum/repos/kubernetes-el7-\$basearch
        enabled: yes
        gpgcheck: yes
        repo_gpgcheck: yes
        gpgkey: https://packages.cloud.google.com/yum/doc/yum-key.gpg https://packages.cloud.google.com/yum/doc/rpm-package-key.gpg
        exclude: kubelet kubeadm kubectl

  - name: "Installing the Softwares"
    yum:
        name: "{{ item }}"
        state: present
        disable_excludes: kubernetes
    loop:
           - docker
           - iproute-tc
           - kubeadm

  - name: Starting Docker and Kubelet services
    service:
        name: "{{ item  }}"
        state: started
        enabled: yes
    loop:
        - docker
        - kubelet
  - name: kubeadm image pull
    command: "kubeadm config images pull"

  - name: Changing Docker drivers
    copy:
        dest: /etc/docker/daemon.json
        content: |
                  {
                      "exec-opts": ["native.cgroupdriver=systemd"]
                      }

  - name: Restarting docker services
    service:
        name: docker
        state: restarted
  - name: Updating k8s config file.
    copy:
      dest: /etc/sysctl.d/k8s.conf
      src: k8s.conf

  - name: Modifing kernel parameters
    command: "sysctl --system"

  - name: Cluster intialising
    command: "kubeadm init --pod-network-cidr=10.240.0.0/16 --ignore-preflight-errors=NumCPU --ignore-preflight-errors=Mem"



  - name: creating .kube directory
    file:
        path: $HOME/.kube
        state: directory

  - name: Copying files to .kube directory.
    shell: "cp -i /etc/kubernetes/admin.conf $HOME/.kube/config"

  - name: Changing ownership of above file.
    shell: "chown $(id -u):$(id -g) $HOME/.kube/config"

  - name: Flannel application
    shell: "kubectl apply -f https://raw.githubusercontent.com/coreos/flannel/master/Documentation/kube-flannel.yml"

  - name: "Changing permissions"
    shell: "export KUBECONFIG=/etc/kubernetes/admin.conf"


  - name: Store join command
    shell: "kubeadm token create  --print-join-command"
    register: print_command

  - name:  Join command.
    blockinfile:
           path: /root/joincmd.yml
           create: yes
           block: |
                  joincmd: {{ print_command.stdout }}

  - name: Copy
    fetch:
           src: /root/joincmd.yml
           dest: vars.yml
           flat: yes

                                                  
